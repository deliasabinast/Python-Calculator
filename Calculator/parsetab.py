
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULDIVleftPOWDIV FLOAT FUNCTION INT LPAREN MINUS MUL PLUS POW RPAREN\n    calc : expression\n        | empty\n    \n    expression : expression POW expression\n                | expression MUL expression\n                | expression DIV expression\n                | expression PLUS expression\n                | expression MINUS expression\n    \n    expression : INT\n                | FLOAT\n    \n    empty :\n    '
    
_lr_action_items = {'INT':([0,6,7,8,9,10,],[4,4,4,4,4,4,]),'FLOAT':([0,6,7,8,9,10,],[5,5,5,5,5,5,]),'$end':([0,1,2,3,4,5,11,12,13,14,15,],[-10,0,-1,-2,-8,-9,-3,-4,-5,-6,-7,]),'POW':([2,4,5,11,12,13,14,15,],[6,-8,-9,-3,6,6,6,6,]),'MUL':([2,4,5,11,12,13,14,15,],[7,-8,-9,-3,-4,-5,7,7,]),'DIV':([2,4,5,11,12,13,14,15,],[8,-8,-9,-3,-4,-5,8,8,]),'PLUS':([2,4,5,11,12,13,14,15,],[9,-8,-9,-3,-4,-5,-6,-7,]),'MINUS':([2,4,5,11,12,13,14,15,],[10,-8,-9,-3,-4,-5,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'calc':([0,],[1,]),'expression':([0,6,7,8,9,10,],[2,11,12,13,14,15,]),'empty':([0,],[3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> calc","S'",1,None,None,None),
  ('calc -> expression','calc',1,'p_calc','calculator.py',70),
  ('calc -> empty','calc',1,'p_calc','calculator.py',71),
  ('expression -> expression POW expression','expression',3,'p_expression','calculator.py',77),
  ('expression -> expression MUL expression','expression',3,'p_expression','calculator.py',78),
  ('expression -> expression DIV expression','expression',3,'p_expression','calculator.py',79),
  ('expression -> expression PLUS expression','expression',3,'p_expression','calculator.py',80),
  ('expression -> expression MINUS expression','expression',3,'p_expression','calculator.py',81),
  ('expression -> INT','expression',1,'p_expression_number','calculator.py',88),
  ('expression -> FLOAT','expression',1,'p_expression_number','calculator.py',89),
  ('empty -> <empty>','empty',0,'p_empty','calculator.py',98),
]
